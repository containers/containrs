var searchIndex = JSON.parse('{\
"common":{"doc":"","t":[13,13,13,3,4,13,13,13,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,0,11,11,13,13,13,13,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["IPC","MOUNT","NET","Namespace","NamespaceType","PID","USER","UTS","borrow","borrow","borrow_mut","borrow_mut","capability","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","into_request","into_request","path","seccomp","to_owned","to_owned","try_from","try_from","try_into","try_into","typ","type_id","type_id","unix_stream","vzip","vzip","AuditControl","AuditRead","AuditWrite","BlockSuspend","Bpf","Capabilities","Capability","CapabilityIter","CheckpointRestore","Chown","DacOverride","DacReadSearch","Fowner","Fsetid","IpcLock","IpcOwner","Kill","Lease","LinuxImmutable","MacAdmin","MacOverride","Mknod","NetAdmin","NetBindService","NetBroadcast","NetRaw","Perfmon","Setfcap","Setgid","Setpcap","Setuid","SysAdmin","SysBoot","SysChroot","SysModule","SysNice","SysPacct","SysPtrace","SysRawio","SysResource","SysTime","SysTtyConfig","Syslog","WakeAlarm","all","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","eq","equivalent","fmt","fmt","fmt","from","from","from","from_str","hash","into","into","into","into_iter","into_request","into_request","into_request","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","NoneConnectInfo","UnixStream","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","connect_info","fmt","from","from","into","into","into_request","into_request","poll_flush","poll_read","poll_shutdown","poll_write","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","common::capability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","common::unix_stream","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Linux capability handling","","","","","","","","","","","","","","seccomp profile handling","","","","","","","","","","","","","Enable and disable kernel auditing; change auditing filter …","","Write records to kernel auditing log (since Linux 2.6.11).","","","A set of capabilities.","All available capabilities.","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","Set arbitrary capabilities on a file (since Linux 2.6.24).","","","","","","","","","","","","","","","","","Get all capabilities.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,1,1,1,2,1,2,1,0,2,1,2,1,2,1,2,1,2,1,2,1,2,0,2,1,2,1,2,1,2,2,1,0,2,1,3,3,3,3,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,4,5,3,4,5,3,5,3,5,3,4,3,3,4,3,3,4,5,3,3,3,4,5,3,5,4,5,3,3,5,5,5,5,5,5,3,3,4,5,3,3,4,5,3,4,5,3,4,5,3,6,0,0,6,7,6,7,7,7,6,6,6,7,6,7,6,7,6,6,6,6,7,6,7,6,7,6,7,6,7],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["namespace",3]],[[],["namespacetype",4]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["str",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["capabilityiter",3]],[[],["capability",4]],[[]],[[]],[[]],[[["capability",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["str",15]],["result",4,[["capability",4]]]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["capabilityiter",3]],[[],["usize",15]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4,[["capability",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[],["noneconnectinfo",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["pin",3],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3],["readbuf",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",6]]]],[[["pin",3],["context",3]],["poll",4,[["result",6,[["usize",15]]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"NamespaceType"],[3,"Namespace"],[4,"Capability"],[3,"Capabilities"],[3,"CapabilityIter"],[3,"UnixStream"],[3,"NoneConnectInfo"]]},\
"container":{"doc":"Open Container Initiative (OCI) related implementations","t":[0,0,8,4,3,13,13,13,13,11,11,11,11,11,11,11,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,10,0,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,4,13,4,13,13,13,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["container","oci_runtime","Container","ContainerState","ContainerStats","Created","Killed","Paused","Started","__clone_box","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","default","delete","eq","exec","fmt","fmt","fmt","from","from","from_str","hash","into","into","kill","local","pause","resume","start","state","stats","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","update","OCIContainer","OCIContainerBuilder","OCIContainerBuilderError","UninitializedField","ValidationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","create","default","default","delete","deserialize","exec","fmt","fmt","fmt","from","from","from","from","from","id","id","into","into","into","kill","log_path","log_path","pause","resume","serialize","spec","spec","start","state","stats","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","0","0","AdditionalGids","All","Apparmor","Auto","AutoDedup","AutoDedup","BlkioWeight","Bundle","Bundle","Bundle","Bundle","Cap","Checkpoint","CheckpointArgs","ConsoleSocket","ConsoleSocket","ConsoleSocket","ConsoleSocket","CpuPeriod","CpuQuota","CpuRtPeriod","CpuRtRuntime","CpuShare","CpusetCpus","CpusetMems","Create","CreateArgs","Criu","Cwd","Debug","Delete","Detach","Detach","Detach","EmptyNs","EmptyNs","Env","Events","EventsArgs","Exec","ExecArgs","ExtUnixSk","ExtUnixSk","False","FileLocks","FileLocks","Format","Format","FormatArgs","Full","GlobalArgs","ImagePath","ImagePath","Init","Interval","Json","Json","KernelMemory","KernelMemoryTcp","Kill","KillArgs","L3CacheSchema","LazyPages","LazyPages","LeaveRunning","List","ListArgs","Log","LogFormat","LogFormatArgs","ManageCgroupsMode","ManageCgroupsMode","ManageCgroupsModeArgs","MemBwSchema","Memory","MemoryReservation","MemorySwap","NoNewKeyright","NoNewKeyring","NoNewPrivs","NoPivot","NoPivot","NoPivot","NoSubreaper","NoSubreaper","OCIRuntime","OCIRuntimeBuilder","OCIRuntimeBuilderError","PageServer","ParentPath","Pause","PidFile","PidFile","PidFile","PidFile","PidsLimit","PreDump","PreserveFds","PreserveFds","PreserveFds","Process","ProcessLabel","Ps","PsArgs","Quiet","Restore","RestoreArgs","Resume","Root","Rootless","Rootless","RootlessArgs","Run","RunArgs","ShellJob","ShellJob","Soft","Spec","SpecArgs","Start","State","Stats","StatusFd","Strict","Subcommand","SystemdCgroup","Table","TcpEstablished","TcpEstablished","Text","True","Ttl","UninitializedField","Update","UpdateArgs","User","ValidationError","Version","WorkPath","WorkPath","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","binary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","run","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["container","","container::container","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","container::container::local","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","container::container::local::OCIContainerBuilderError","","container::oci_runtimecontainer::oci_runtime::CheckpointArgs","","","","","","","container::oci_runtime::CreateArgs","","","","container::oci_runtime::EventsArgs","container::oci_runtime::ExecArgs","","","","","","","","","","","container::oci_runtime::GlobalArgs","","","","","","container::oci_runtime::ListArgs","container::oci_runtime::OCIRuntimeBuilderError","","container::oci_runtime::PsArgs","container::oci_runtime::RestoreArgs","","","","","","","container::oci_runtime::RunArgs","","","","container::oci_runtime::SpecArgs","container::oci_runtime::Subcommand","","","","","","","","","","","","","","","","container::oci_runtime::UpdateArgs","","","","","","","","","","","","","","",""],"d":["OCI container implementations.","Interface to oci_runtime, a OCI compliant cli for spawning …","Container is the trait for implementing possible …","Possible container states.","Container resource statistics.","The container has been created (default state).","The container is stopped, usually after calling its <code>kill()</code> …","The container is paused, usually after calling its <code>pause()</code> …","The container is running, usually after calling its <code>start()</code>…","","","","","","","","","Create a new container, which should be in the <code>Created</code> …","","Delete any resources held by the container often used with …","","Execute the provided process inside the container.","","","","","","","","","","Send the specified signal to the container’s init …","A local Command Line Interface based OCI runtime …","Suspend all processes inside the container.","Resumes all processes that have been previously paused.","Execute the user defined process in a created container.","Retrieve the state of a container.","Retrieve container resource statistics.","","","","","","","","","","Update container resource constraints.","A general OCI container implementation.","Builder for <code>OCIContainer</code>.","Error type for OCIContainerBuilder","Uninitialized field","Custom validation error","","","","","","","Builds a new <code>OCIContainer</code>.","Create a new container, which should be in the <code>Created</code> …","","","Delete any resources held by the container often used with …","","Execute the provided process inside the container.","","","","","","","","","Unique identifier of the container.","Unique identifier of the container.","","","","Send the specified signal to the container’s init …","","","Suspend all processes inside the container.","Resumes all processes that have been previously paused.","","OCI Runtime Specification of the container.","OCI Runtime Specification of the container.","Execute the user defined process in a created container.","Retrieve the state of a container.","Retrieve container resource statistics.","","","","","","","","","","","Update container resource constraints.","","","Additional gids","","Set the apparmor profile for the process","","Enable auto deduplication of memory images","Enable auto deduplication of memory images","Specifies per cgroup weight, range is from 10 to 1000 …","Path to the root of the bundle directory","Path to the root of the bundle directory","Path to the root of the bundle directory, defaults to the …","Path to the root of the bundle directory","Add a capability to the bounding set for the process","Checkpoint a running container","Available arguments for ‘oci_runtime checkpoint’.","Path to an AF_UNIX socket which will receive a file …","Path to an AF_UNIX socket which will receive a file …","Path to an AF_UNIX socket which will receive a file …","Path to an AF_UNIX socket which will receive a file …","CPU CFS period to be used for hardcapping (in usecs). 0 to …","CPU CFS hardcap limit (in usecs). Allowed cpu time in a …","CPU realtime period to be used for hardcapping (in usecs). …","CPU realtime hardcap limit (in usecs). Allowed cpu time in …","CPU shares (relative weight vs. other containers)","CPU(s) to use","Memory node(s) to use","Create a container","Available arguments for ‘oci_runtime create’.","Path to the criu binary used for checkpoint and restore …","Current working directory in the container","Enable debug output for logging","Delete any resources held by the container often used with …","Detach from the container’s process","Detach from the container’s process","Detach from the container’s process","Create a namespace, but don’t restore its properties","Create a namespace, but don’t restore its properties","Set environment variables","Display container events such as OOM notifications, cpu, …","Available arguments for ‘oci_runtime events’.","Execute new process inside the container","Available arguments for ‘oci_runtime exec’.","Allow external unix sockets","Allow external unix sockets","","Handle file locks, for safety","Handle file locks, for safety","One of: table or json (default: “table”)","one of: table or json (default: “table”)","","","Available global arguments for oci_runtime.","Path for saving criu image files","Path for saving criu image files","Initialize the namespaces and launch the process (do not …","Set the stats collection interval (default: 5s)","","","Kernel memory limit (in bytes)","Kernel memory limit (in bytes) for tcp buffer","Kill sends the specified signal (default: SIGTERM) to the …","Available arguments for ‘oci_runtime kill’.","The string of Intel RDT/CAT L3 cache schema","Use userfaultfd to lazily restore memory pages","Use userfaultfd to lazily restore memory pages","Leave the process running after checkpointing","Lists containers started by runc with the given root","Available arguments for ‘oci_runtime list’.","Set the log file path where internal debug information is …","Set the format used by logs (‘text’ (default), or ‘…","Available global arguments for oci_runtime.","cgroups mode: ‘soft’ (default), ‘full’ and ‘…","cgroups mode: ‘soft’ (default), ‘full’ and ‘…","Available arguments for ‘oci_runtime checkpoint’.","The string of Intel RDT/MBA memory bandwidth schema","Memory limit (in bytes)","Memory reservation or soft_limit (in bytes)","Total memory usage (memory + swap); set ‘-1’ to enable …","Do not create a new session keyring for the container.  …","Do not create a new session keyring for the container.","Set the no new privileges value for the process","Do not use pivot root to jail process inside rootfs.  This …","Do not use pivot root to jail process inside rootfs.  This …","Do not use pivot root to jail process inside rootfs.  This …","Disable the use of the subreaper used to reap reparented …","Disable the use of the subreaper used to reap reparented …","","Builder for <code>OCIRuntime</code>.","Error type for OCIRuntimeBuilder","ADDRESS:PORT of the page server","Path for previous criu image files in pre-dump","Pause suspends all processes inside the container","Specify the file to write the process id to","Specify the file to write the process id to","Specify the file to write the process id to","Specify the file to write the process id to","Maximum number of pids allowed in the container (default: …","Dump container’s memory information only, leave the …","Pass N additional file descriptors to the container …","Pass N additional file descriptors to the container (stdio …","Pass N additional file descriptors to the container (stdio …","Path to the process.json","Set the asm process label for the process commonly used …","Ps displays the processes running inside a container","Available arguments for ‘oci_runtime ps’.","Display only container IDs","Restore a container from a previous checkpoint","Available arguments for ‘oci_runtime restore’.","Resumes all processes that have been previously paused","Root directory for storage of container state (this should …","Ignore cgroup permission errors (‘true’, ‘false’, …","Generate a configuration for a rootless container","Available global arguments for oci_runtime.","Create and run a container","Available arguments for ‘oci_runtime run’.","Allow shell jobs","Allow shell jobs","","Create a new specification file","Available arguments for ‘oci_runtime spec’.","Executes the user defined process in a created container","Output the state of a container","Display the container’s stats then exit","Criu writes \\\\0 to this FD once lazy-pages is ready","","","Enable systemd cgroup support, expects cgroupsPath to be …","","Allow open tcp connections","Allow open tcp connections","","","Allocate a pseudo-TTY","Uninitialized field","Update container resource constraints","Available arguments for ‘oci_runtime update’.","UID (format: [:])","Custom validation error","Print the version","Path for saving work files and logs","Path for saving work files and logs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to the oci_runtime binary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>OCIRuntime</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run OCIRuntime with the provided subcommand and args and …i":[0,0,0,0,0,1,1,1,1,1,1,2,1,2,1,1,1,3,2,3,1,3,2,1,1,2,1,1,1,2,1,3,0,3,3,3,3,3,1,1,2,1,1,2,1,2,1,3,0,0,0,4,4,5,4,6,5,4,6,5,6,5,6,6,6,6,4,4,6,5,4,4,4,6,5,6,5,4,6,6,5,6,6,6,6,5,6,6,6,6,4,5,4,6,5,4,6,5,4,6,6,7,8,9,10,9,11,12,13,14,15,13,16,17,9,18,0,15,9,13,16,14,14,14,14,14,14,14,18,0,19,9,19,18,9,13,16,12,13,9,18,0,18,0,12,13,11,12,13,20,21,0,22,0,12,13,18,23,24,25,14,14,18,0,14,12,13,12,18,0,19,19,0,12,13,0,14,14,14,14,16,15,9,15,13,16,13,16,0,0,0,12,12,18,15,9,13,16,14,12,15,9,16,9,9,18,0,20,18,0,18,19,19,17,0,18,0,12,13,22,18,0,18,18,23,12,22,0,19,25,12,13,24,11,9,26,18,0,9,26,19,12,13,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,26,26,28,18,18,11,11,24,24,19,19,22,22,12,12,15,15,23,23,9,9,10,10,25,25,20,20,21,21,13,13,16,16,17,17,14,14,27,26,26,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,18,19,12,15,23,9,20,21,13,16,17,14,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,26,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,27,26,28,18,11,24,19,22,12,15,23,9,10,25,20,21,13,16,17,14,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"f":[null,null,null,null,null,null,null,null,null,[[["private",3]]],[[],["str",15]],[[]],[[]],[[]],[[]],[[],["containerstate",4]],[[]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["containerstats",3]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["containerstate",4]],["bool",15]],[[["command",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",4,[["containerstate",4]]]],[[]],[[]],[[]],[[["signalkind",3]],["pin",3,[["box",3,[["future",8]]]]]],null,[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["string",3]],[[],["result",4]],[[["str",15]],["result",4,[["containerstate",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["linuxresources",3]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["ocicontainer",3],["ocicontainerbuildererror",4]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["ocicontainer",3]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[["command",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["uninitializedfielderror",3]]],[[["string",3]]],[[]],[[]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[]],[[]],[[]],[[["signalkind",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["pathbuf",3]]]]],[[],["pathbuf",3]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[["into",8,[["spec",3]]]]],[[],["spec",3]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["linuxresources",3]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[["into",8,[["pathbuf",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["ociruntime",3],["ociruntimebuildererror",4]]]],[[],["subcommand",4]],[[],["rootlessargs",4]],[[],["logformatargs",4]],[[],["globalargs",4]],[[],["managecgroupsmodeargs",4]],[[],["checkpointargs",4]],[[],["createargs",4]],[[],["eventsargs",4]],[[],["execargs",4]],[[],["killargs",4]],[[],["formatargs",4]],[[],["listargs",4]],[[],["psargs",4]],[[],["restoreargs",4]],[[],["runargs",4]],[[],["specargs",4]],[[],["updateargs",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subcommand",4]],["bool",15]],[[["rootlessargs",4]],["bool",15]],[[["logformatargs",4]],["bool",15]],[[["globalargs",4]],["bool",15]],[[["managecgroupsmodeargs",4]],["bool",15]],[[["checkpointargs",4]],["bool",15]],[[["createargs",4]],["bool",15]],[[["eventsargs",4]],["bool",15]],[[["execargs",4]],["bool",15]],[[["killargs",4]],["bool",15]],[[["formatargs",4]],["bool",15]],[[["listargs",4]],["bool",15]],[[["psargs",4]],["bool",15]],[[["restoreargs",4]],["bool",15]],[[["runargs",4]],["bool",15]],[[["specargs",4]],["bool",15]],[[["updateargs",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["string",3]]],[[["uninitializedfielderror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["subcommand",4]],["bool",15]],[[["globalargs",4]],["bool",15]],[[["checkpointargs",4]],["bool",15]],[[["createargs",4]],["bool",15]],[[["eventsargs",4]],["bool",15]],[[["execargs",4]],["bool",15]],[[["listargs",4]],["bool",15]],[[["psargs",4]],["bool",15]],[[["restoreargs",4]],["bool",15]],[[["runargs",4]],["bool",15]],[[["specargs",4]],["bool",15]],[[["updateargs",4]],["bool",15]],[[["subcommand",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ContainerState"],[3,"ContainerStats"],[8,"Container"],[4,"OCIContainerBuilderError"],[3,"OCIContainerBuilder"],[3,"OCIContainer"],[13,"UninitializedField"],[13,"ValidationError"],[4,"ExecArgs"],[4,"KillArgs"],[4,"RootlessArgs"],[4,"CheckpointArgs"],[4,"RestoreArgs"],[4,"UpdateArgs"],[4,"CreateArgs"],[4,"RunArgs"],[4,"SpecArgs"],[4,"Subcommand"],[4,"GlobalArgs"],[4,"ListArgs"],[4,"PsArgs"],[4,"ManageCgroupsModeArgs"],[4,"EventsArgs"],[4,"LogFormatArgs"],[4,"FormatArgs"],[4,"OCIRuntimeBuilderError"],[3,"OCIRuntimeBuilder"],[3,"OCIRuntime"],[13,"ImagePath"],[13,"WorkPath"],[13,"ParentPath"],[13,"StatusFd"],[13,"PageServer"],[13,"ManageCgroupsMode"],[13,"EmptyNs"],[13,"Bundle"],[13,"ConsoleSocket"],[13,"PidFile"],[13,"PreserveFds"],[13,"Interval"],[13,"ConsoleSocket"],[13,"Cwd"],[13,"Env"],[13,"User"],[13,"AdditionalGids"],[13,"Process"],[13,"PidFile"],[13,"ProcessLabel"],[13,"Apparmor"],[13,"Cap"],[13,"PreserveFds"],[13,"Log"],[13,"LogFormat"],[13,"Root"],[13,"Criu"],[13,"SystemdCgroup"],[13,"Rootless"],[13,"Format"],[13,"UninitializedField"],[13,"ValidationError"],[13,"Format"],[13,"ConsoleSocket"],[13,"ImagePath"],[13,"WorkPath"],[13,"ManageCgroupsMode"],[13,"Bundle"],[13,"PidFile"],[13,"EmptyNs"],[13,"Bundle"],[13,"ConsoleSocket"],[13,"PidFile"],[13,"PreserveFds"],[13,"Bundle"],[13,"Checkpoint"],[13,"Create"],[13,"Delete"],[13,"Events"],[13,"Exec"],[13,"Kill"],[13,"List"],[13,"Pause"],[13,"Ps"],[13,"Restore"],[13,"Resume"],[13,"Run"],[13,"Spec"],[13,"Start"],[13,"State"],[13,"Update"],[13,"BlkioWeight"],[13,"CpuPeriod"],[13,"CpuQuota"],[13,"CpuShare"],[13,"CpuRtPeriod"],[13,"CpuRtRuntime"],[13,"CpusetCpus"],[13,"CpusetMems"],[13,"KernelMemory"],[13,"KernelMemoryTcp"],[13,"Memory"],[13,"MemoryReservation"],[13,"MemorySwap"],[13,"PidsLimit"],[13,"L3CacheSchema"],[13,"MemBwSchema"]]},\
"ffi":{"doc":"FFI related implementations","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"image":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"network":{"doc":"Network types and implementations.","t":[3,3,4,8,13,13,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,4,3,3,4,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Network","NetworkBuilder","NetworkBuilderError","PodNetwork","UninitializedField","ValidationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cleanup","cleanup","cni","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","implementation","init","init","init","into","into","into","into_request","into_request","into_request","start","start","stop","stop","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","CNI","CNIBuilder","CNIBuilderError","CNIState","CNIStateBuilder","CNIStateBuilderError","Exit","Handle","UninitializedField","UninitializedField","ValidationError","ValidationError","WatcherMessage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cleanup","config_paths","configs","default","default","default","default","default_network","default_network_name","default_network_name","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","initialize","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","plugin_exec","plugin_paths","plugin_paths","port","start","state","stop","storage","storage_path","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watcher","0","0","0","0","0","PortManager","PortMapping","PortMappingBuilder","PortMappingBuilderError","UninitializedField","ValidationError","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","container_port","container_port","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","hash","host","host","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","new","protocol","protocol","remove","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0"],"q":["network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::NetworkBuilderError","","network::cni","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::cni::CNIBuilderError","","network::cni::CNIStateBuilderError","","network::cni::WatcherMessage","network::cni::port","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network::cni::port::PortMappingBuilderError",""],"d":["Network is the main structure for working with the …","Builder for <code>Network</code>.","Error type for NetworkBuilder","Common network behavior trait","Uninitialized field","Custom validation error","","","","","","","Builds a new <code>Network</code>.","Cleanup the network implementation on server shutdown.","Cleanup the network implementation on server shutdown.","A network implementation which does work with the …","","","","","","","","","","","","","","","","","","Trait implementation for the network.","","","","","","","","","","Wrapper for the implementations <code>start</code> method.","Start a new network for the provided <code>SandboxData</code>.","Wrapper for the implementations <code>stop</code> method.","Stop the network of the provided <code>SandboxData</code>.","","","","","","","","","","","","","","","","The pod network implementation based on the Container …","Builder for <code>CNI</code>.","Error type for CNIBuilder","The CNI state which will be setup on the <code>initialize</code> method …","Builder for <code>CNIState</code>.","Error type for CNIStateBuilder","A message indicating that the watching should end.","A notification evened message.","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Selector for watcher messages on the receiver channel.","","","","","","","","","","","","","","","Builds a new <code>CNI</code>.","Builds a new <code>CNIState</code>.","Cleanup the network on server shutdown.","The paths to configuration files.","Configuration storage, referenced by their file path on …","","","","","The current default CNI network.","This is the default CNI network name set by the user.","This is the default CNI network name set by the user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize the CNI network","","","","","","","","","","","","","","","CNI command execution helper.","The pugin search paths to be used.","The plugin search paths to be used.","Host to container port mapping functionality.","Start a new network for the provided <code>SandboxData</code>.","CNI network state.","Stop the network of the provided <code>SandboxData</code>.","The storage instance to be used for persisting CNI results.","The storage path to be used for persisting CNI results.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration watcher for monitoring config path …","","","","","","The main interface to manage port mappings.","A PortMapping represents a host to container port …","Builder for <code>PortMapping</code>.","Error type for PortMappingBuilder","Uninitialized field","Custom validation error","Add a port mappings for the provided network to the …","","","","","","","","","Builds a new <code>PortMapping</code>.","The port number inside the container.","The port number inside the container.","","","","","","","","","","","","","","","","","","","","","","","","Host socket address to be used.","Host socket address to be used.","","","","","","","","","","","","","Create a new port manager instance.","The protocol of the port mapping.","The protocol of the port mapping.","Remove a port mapping for the provided id.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,1,3,2,1,3,2,3,4,0,2,2,1,3,2,1,3,2,1,3,1,1,2,1,1,1,3,2,2,1,3,2,1,3,2,1,3,3,4,3,4,1,2,1,3,2,1,3,2,1,3,2,1,3,5,6,0,0,0,0,0,0,7,7,8,9,8,9,0,7,10,8,11,12,9,13,7,10,8,11,12,9,13,10,12,11,10,12,10,11,12,13,12,10,12,7,10,8,11,12,9,13,7,10,8,11,12,9,13,7,10,8,11,12,9,13,8,8,9,9,13,7,10,8,8,8,11,12,9,9,9,13,7,10,8,11,12,9,13,11,7,10,8,11,12,9,13,7,10,8,11,12,9,13,10,10,12,0,11,10,11,12,10,8,9,7,10,8,11,12,9,13,7,10,8,11,12,9,13,7,10,8,11,12,9,13,7,10,8,11,12,9,13,10,14,15,16,17,18,0,0,0,0,19,19,20,20,21,19,22,20,21,19,22,21,21,22,21,20,21,19,22,20,21,19,22,20,21,19,22,19,19,22,20,21,19,19,19,22,22,21,22,20,21,19,22,20,21,19,22,20,21,19,22,20,21,22,20,19,20,21,19,22,20,21,19,22,20,21,19,22,20,21,19,22,23,24],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["network",3],["networkbuildererror",4]]]],[[]],[[],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["uninitializedfielderror",3]]],[[["string",3]]],[[]],[[]],[[["into",8]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["sandboxconfig",3]]],[[["sandboxconfig",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["sandboxconfig",3]]],[[["sandboxconfig",3]],["pin",3,[["box",3,[["future",8]]]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["cni",3],["cnibuildererror",4]]]],[[],["result",4,[["cnistate",3],["cnistatebuildererror",4]]]],[[],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["vec",3,[["pathbuf",3]]]]]]],[[["into",8,[["hashmap",3,[["pathbuf",3],["config",3]]]]]]],[[]],[[],["cni",3]],[[]],[[],["cnistate",3]],[[["into",8,[["option",4,[["config",3]]]]]]],[[["into",8,[["option",4,[["string",3]]]]]]],[[["into",8,[["option",4,[["string",3]]]]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["uninitializedfielderror",3]]],[[["string",3]]],[[]],[[]],[[]],[[["uninitializedfielderror",3]]],[[["string",3]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["into",8,[["option",4,[["box",3,[["exec",8]]]]]]]]],[[["into",8,[["string",3]]]]],[[["into",8,[["string",3]]]]],null,[[["sandboxconfig",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["arc",3,[["rwlock",3,[["cnistate",3]]]]]]]]],[[["sandboxconfig",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["option",4,[["defaultkeyvaluestorage",3]]]]]]],[[["into",8,[["option",4,[["pathbuf",3]]]]]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["into",8,[["option",4]]]]],null,null,null,null,null,null,null,null,null,null,null,[[["ipnetwork",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["portmapping",3],["portmappingbuildererror",4]]]],[[["into",8,[["u16",15]]]]],[[],["u16",15]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["string",3]]],[[["uninitializedfielderror",3]]],[[]],[[]],[[["into",8,[["socketaddr",4]]]]],[[],["socketaddr",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[["str",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null],"p":[[4,"NetworkBuilderError"],[3,"NetworkBuilder"],[3,"Network"],[8,"PodNetwork"],[13,"UninitializedField"],[13,"ValidationError"],[4,"WatcherMessage"],[4,"CNIBuilderError"],[4,"CNIStateBuilderError"],[3,"CNIBuilder"],[3,"CNI"],[3,"CNIStateBuilder"],[3,"CNIState"],[13,"UninitializedField"],[13,"ValidationError"],[13,"UninitializedField"],[13,"ValidationError"],[13,"Handle"],[4,"PortMappingBuilderError"],[3,"PortManager"],[3,"PortMappingBuilder"],[3,"PortMapping"],[13,"UninitializedField"],[13,"ValidationError"]]},\
"sandbox":{"doc":"Basic Pod Sandbox types","t":[18,18,3,18,18,18,8,3,3,3,3,3,3,3,3,3,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,6,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,13,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CGROUP","IPC","LinuxNamespaces","MOUNT","NET","PID","Pod","Sandbox","SandboxBuilder","SandboxConfig","SandboxConfigBuilder","SandboxContext","SandboxContextBuilder","SandboxState","SecurityConfig","SecurityConfigBuilder","USER","UTS","__clone_box","__clone_box","__clone_box","__clone_box","all","annotations","annotations","attempt","attempt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cgroup_parent","cgroup_parent","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","config","config","contains","context","default","default","default","default","default","default","difference","empty","eq","equivalent","error","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hostname","hostname","id","id","id","implementation","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ipc_ns","is_all","is_empty","labels","labels","linux_namespaces","linux_namespaces","log_directory","log_directory","name","name","namespace","namespace","ne","net_ns","network_namespace_path","network_namespace_path","not","partial_cmp","pinned","pinns","pinns","pinns","privileged","privileged","readonly_rootfs","readonly_rootfs","ready","ready","remove","remove","remove","run","run","run_as_group","run_as_group","run_as_user","run_as_user","seccomp_profile","seccomp_profile","security","security","set","set_ipc_ns","set_net_ns","set_user_ns","set_uts_ns","state","state_mut","stop","stop","sub","sub_assign","supplemental_groups","supplemental_groups","symmetric_difference","sysctls","sysctls","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","user_ns","uts_ns","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Builder","IO","Pinning","Result","SandboxError","borrow","borrow_mut","fmt","fmt","from","from","from","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","PinnedSandbox","borrow","borrow_mut","default","from","into","into_request","ready","remove","run","stop","try_from","try_into","type_id","vzip","Debug","Error","Info","LogLevel","Off","Pinns","PinnsBuilder","Trace","Warn","__clone_box","__clone_box","as_ref","binary","binary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","default","default","default","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","log_level","log_level","pin_dir","pin_dir","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["sandboxsandbox::error","","","","","","","","","","","","","","","","","","","","sandbox::error::SandboxError","","","sandbox::pinned","","","","","","","","","","","","","","","sandbox::pinns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","This is the main data structure for a Pod Sandbox. The …","Builder for <code>Sandbox</code>.","SandboxData holds all the data which will be passed around …","Builder for <code>SandboxConfig</code>.","","Builder for <code>SandboxContext</code>.","","","Builder for <code>SecurityConfig</code>.","","","","","","","Returns the set containing all flags.","","","Sandbox creation attempt. It only changes if the …","Sandbox creation attempt. It only changes if the …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Builds a new <code>Sandbox</code>.","Builds a new <code>SandboxConfig</code>.","Builds a new <code>SecurityConfig</code>.","Builds a new <code>SandboxContext</code>.","","","","","","","","","","","","Returns the complement of this set of flags.","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Hostname of the sandbox.","Hostname of the sandbox.","Retrieve the unique identifier for the sandbox","The unique identifier.","The unique identifier.","Trait implementation for creating the sandbox.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Linux namespaces held by the Sandbox.","Linux namespaces held by the Sandbox.","","","Full name of the sandbox.","Full name of the sandbox.","Namespace where the sandbox lives in.","Namespace where the sandbox lives in.","","","","","Returns the complement of this set of flags.","","A pod sandbox implementation which does pin it’s …","","","","Indicates if the sandbox will run a privileged container","Indicates if the sandbox will run a privileged container","Indicates if the root filesystem of the sandbox is readonly","Indicates if the root filesystem of the sandbox is readonly","Wrapper for the implementations <code>ready</code> method","","Wrapper for the implementations <code>remove</code> method","Removes the specified flags in-place.","Remove a stopped sandbox.","Wrapper for the implementations <code>run</code> method","Run a previously created sandbox.","GID to run sandbox processes as","GID to run sandbox processes as","UID to run sandbox processes as","UID to run sandbox processes as","Seccomp profile that should be applied to the sandbox","Seccomp profile that should be applied to the sandbox","","","Inserts or removes the specified flags depending on the …","","","","","","","Wrapper for the implementations <code>stop</code> method","Stop a previously started sandbox.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Additional groups to apply to sandbox processes","Additional groups to apply to sandbox processes","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder for <code>Pinns</code>.","","","","","","","","","","","","","","Builds a new <code>Pinns</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,4,1,5,2,5,2,1,1,1,1,1,1,1,6,7,1,5,2,8,3,4,9,10,6,7,1,5,2,8,3,4,9,10,6,5,8,9,5,2,1,2,3,4,1,2,3,4,1,1,9,10,1,6,6,5,8,3,4,9,1,1,1,1,0,1,7,7,1,1,1,1,1,2,3,4,10,6,7,1,5,2,8,3,4,9,10,1,1,1,1,1,5,2,7,5,2,6,1,1,1,6,7,1,5,2,8,3,4,9,10,6,7,1,5,2,8,3,4,9,10,4,1,1,5,2,5,2,5,2,5,2,5,2,1,4,5,2,1,1,0,0,5,2,8,3,8,3,7,11,7,1,11,7,11,8,3,8,3,8,3,5,2,1,4,4,4,4,9,10,7,11,1,1,8,3,1,5,2,1,2,3,4,7,1,6,7,1,5,2,8,3,4,9,10,6,7,1,5,2,8,3,4,9,10,6,7,1,5,2,8,3,4,9,10,1,4,4,6,7,1,5,2,8,3,4,9,10,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,14,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,0,17,0,0,17,17,18,17,17,19,18,19,18,17,19,18,17,19,18,17,18,17,19,18,17,18,17,17,19,18,17,19,18,17,19,18,17,19,18,19,18,18,17,17,19,18,17,19,18,17,19,18,17,19,18,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[["private",3]]],[[["private",3]]],[[]],[[["into",8,[["hashmap",3,[["string",3],["string",3]]]]]]],[[],["hashmap",3]],[[["into",8,[["u32",15]]]]],[[],["u32",15]],[[]],[[]],[[["linuxnamespaces",3]]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["sandbox",3],["sandboxerror",4]]]],[[],["result",4,[["sandboxconfig",3],["sandboxerror",4]]]],[[],["result",4,[["securityconfig",3],["sandboxerror",4]]]],[[],["result",4,[["sandboxcontext",3],["sandboxerror",4]]]],[[["into",8,[["pathbuf",3]]]]],[[],["pathbuf",3]],[[],["linuxnamespaces",3]],[[],["sandboxconfig",3]],[[],["securityconfig",3]],[[],["sandboxstate",3]],[[]],[[]],[[]],[[]],[[["linuxnamespaces",3]],["ordering",4]],[[]],[[["into",8,[["sandboxconfig",3]]]]],[[],["sandboxconfig",3]],[[],["bool",15]],[[["into",8,[["sandboxcontext",3]]]]],[[]],[[]],[[]],[[],["securityconfig",3]],[[],["sandboxstate",3]],[[]],[[]],[[]],[[["linuxnamespaces",3]],["bool",15]],[[],["bool",15]],null,[[["intoiterator",8]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["intoiterator",8]]],[[]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[],["str",15]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[["into",8]]],[[]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[["into",8,[["hashmap",3,[["string",3],["string",3]]]]]]],[[],["hashmap",3]],[[["into",8,[["option",4,[["linuxnamespaces",3]]]]]]],[[],["option",4]],[[["into",8,[["pathbuf",3]]]]],[[],["pathbuf",3]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[["into",8,[["string",3]]]]],[[],["string",3]],[[["linuxnamespaces",3]],["bool",15]],[[],["option",4]],[[["into",8,[["option",4,[["pathbuf",3]]]]]]],[[],["option",4]],[[]],[[["linuxnamespaces",3]],["option",4,[["ordering",4]]]],null,null,[[["into",8,[["pinns",3]]]]],[[],["pinns",3]],[[["into",8,[["bool",15]]]]],[[],["bool",15]],[[["into",8,[["bool",15]]]]],[[],["bool",15]],[[],["result",6,[["bool",15]]]],[[["sandboxcontext",3]],["result",6,[["bool",15]]]],[[],["result",6]],[[]],[[["sandboxcontext",3]],["result",6]],[[]],[[["sandboxcontext",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["into",8,[["option",4,[["i64",15]]]]]]],[[],["option",4]],[[["into",8,[["option",4,[["i64",15]]]]]]],[[],["option",4]],[[["into",8,[["option",4,[["string",3]]]]]]],[[],["option",4]],[[["into",8,[["securityconfig",3]]]]],[[],["securityconfig",3]],[[["bool",15]]],[[["option",4,[["namespace",3]]]]],[[["option",4,[["namespace",3]]]]],[[["option",4,[["namespace",3]]]]],[[["option",4,[["namespace",3]]]]],[[["into",8,[["sandboxstate",3]]]]],[[],["sandboxstate",3]],[[],["result",6]],[[["sandboxcontext",3]],["result",6]],[[]],[[]],[[["into",8,[["vec",3,[["i64",15]]]]]]],[[],["vec",3]],[[]],[[["into",8,[["hashmap",3,[["string",3],["string",3]]]]]]],[[],["hashmap",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["error",3]]],[[["uninitializedfielderror",3]]],[[]],[[],["request",3]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[],["pinnedsandbox",3]],[[]],[[]],[[],["request",3]],[[["sandboxcontext",3]],["result",6,[["bool",15]]]],[[["sandboxcontext",3]],["result",6]],[[["sandboxcontext",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["sandboxcontext",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,[[["private",3]]],[[["private",3]]],[[],["str",15]],[[["into",8,[["pathbuf",3]]]]],[[],["pathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["pinns",3],["sandboxerror",4]]]],[[],["pinns",3]],[[],["loglevel",4]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["into",8,[["loglevel",4]]]]],[[],["loglevel",4]],[[["into",8,[["pathbuf",3]]]]],[[],["pathbuf",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"LinuxNamespaces"],[3,"SandboxConfig"],[3,"SecurityConfig"],[3,"SandboxState"],[3,"SandboxConfigBuilder"],[3,"SandboxBuilder"],[3,"Sandbox"],[3,"SecurityConfigBuilder"],[3,"SandboxContextBuilder"],[3,"SandboxContext"],[8,"Pod"],[4,"SandboxError"],[13,"Builder"],[13,"Pinning"],[13,"IO"],[3,"PinnedSandbox"],[4,"LogLevel"],[3,"Pinns"],[3,"PinnsBuilder"]]},\
"server":{"doc":"","t":[5],"n":["main"],"q":["server"],"d":[""],"i":[0],"f":[[[],["result",6]]],"p":[]},\
"services":{"doc":"Everything Kubernetes related, like the actual GRPC server …","t":[0,0,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["error","server","IO","Other","ServiceError","Spec","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","into_request","source","to_string","try_from","try_into","type_id","vzip","0","0","0","Config","Global","Lib","LogScope","Server","__clone_box","as_ref","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cni_config_paths","cni_default_network","cni_plugin_paths","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","fmt","from","from","from","from_arg_matches","from_str","init","init","init","into","into","into","into_app","into_app_for_update","into_request","into_request","into_request","log_level","log_scope","new","serialize","serialize","sock_path","start","storage_path","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","vzip","vzip","vzip"],"q":["services","","services::error","","","","","","","","","","","","","","","","","","","","","","","services::error::ServiceError","","","services::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Container Runtime Interface server implementation","","","","","","","","","","","","","","","","","","","","","","","","","","","Config is the main configuration structure for the server.","All dependent libraries will log too.","Logging will only happen on a library level.","Defines the scope of the log level","Server is the main instance to run the Container Runtime …","","","","","","","","","","","","","The paths to the CNI configurations.","The default CNI network name to choose.","The paths to the CNI plugin binaries, separated by the OS …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The logging level of the application.","The logging scope of the application. If set to <code>global</code>, …","Create a new server instance","","","The path to the unix socket for the server.","Start a new server with its default values","The path to the persistent storage for the server.","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,0,5,5,0,0,5,5,6,6,7,6,5,7,6,5,5,5,6,6,6,6,7,6,5,7,6,5,6,5,7,6,5,5,5,7,6,5,6,5,7,6,5,7,6,5,6,6,7,6,5,6,6,7,6,5,6,7,6,5,7,6,5,5,7,6,5,7,6,5,6,7,6,5],"f":[null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["ocispecerror",4]]],[[["error",3]]],[[]],[[],["usize",15]],[[]],[[],["request",3]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[["private",3]]],[[],["str",15]],[[["app",3]],["app",3]],[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logscope",4]],[[]],[[],["vec",3]],[[],["option",4]],[[],["string",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["logscope",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["argmatches",3]],["result",4,[["error",3]]]],[[["str",15]],["result",4,[["logscope",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["levelfilter",4]],[[],["logscope",4]],[[["config",3]]],[[],["result",4]],[[],["result",4]],[[],["pathbuf",3]],[[]],[[],["pathbuf",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4,[["logscope",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["argmatches",3]],["result",4,[["error",3]]]],[[]],[[]],[[]]],"p":[[4,"ServiceError"],[13,"Other"],[13,"IO"],[13,"Spec"],[4,"LogScope"],[3,"Config"],[3,"Server"]]},\
"storage":{"doc":"Basic storage types","t":[8,0,10,10,0,10,10,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["KeyValueStorage","default_key_value_storage","get","insert","memory_key_value_storage","open","persist","remove","DefaultKeyValueStorage","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","get","init","insert","into","open","persist","remove","to_owned","try_from","try_into","type_id","MemoryKeyValueStorage","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get","init","insert","into","open","persist","remove","to_owned","try_from","try_into","type_id"],"q":["storage","","","","","","","","storage::default_key_value_storage","","","","","","","","","","","","","","","","","","","","","storage::memory_key_value_storage","","","","","","","","","","","","","","","","","","","","",""],"d":["The data storage trait which defines the methods a storage …","The default key value storage implementation for storing …","Get an arbitrary item from the storage.","Insert an item into the storage.","","Load the storage from the provided path.","Save the storage to disk so that it is safe to stop the …","Remove an item from the storage.","A default key value storage implementation","","","","","","","","","","","","","","Open the database, whereas the <code>Path</code> has to be a directory.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,[[],["result",6,[["option",4]]]],[[],["result",6]],null,[[],["result",6]],[[],["result",6]],[[],["result",6]],null,[[]],[[]],[[],["defaultkeyvaluestorage",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["result",6,[["option",4]]]],[[],["usize",15]],[[],["result",6]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["memorykeyvaluestorage",3]],[[]],[[],["memorykeyvaluestorage",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["result",6,[["option",4]]]],[[],["usize",15]],[[],["result",6]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[8,"KeyValueStorage"],[3,"DefaultKeyValueStorage"],[3,"MemoryKeyValueStorage"]]},\
"tests":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};